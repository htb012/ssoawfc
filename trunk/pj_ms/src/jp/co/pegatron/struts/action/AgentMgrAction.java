/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package jp.co.pegatron.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jp.co.pegatron.domain.model.Agent;

import jp.co.pegatron.service.AgentSvc;

import jp.co.pegatron.struts.form.AgentForm;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.ssoserver.common.pagination.Pagination;
import com.ssoserver.utils.GetPropMessage;

/**
 * MyEclipse Struts Creation date: 03-01-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class AgentMgrAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String task = request.getParameter("task");
		if ("view".equals(task)) {
			Pagination pagination = new Pagination();
			String scope = request.getParameter("scope");
			List agentList = null;
			String viewHQLStr;
			if ("all".equals(scope)) {
				viewHQLStr = GetPropMessage.getUTF8Message("allAgent");
			} else {
				viewHQLStr = GetPropMessage.getUTF8Message("allAgent");
			}
			agentList = pagination.execute(AgentSvc.getInstance(), viewHQLStr,
					request, response);
			request.setAttribute("scope", scope);
			request.setAttribute("agentList", agentList);
			return mapping.findForward("showAgent");
		} else if ("add".equals(task)) {
			AgentForm agentForm = (AgentForm) form;
			Agent agent = agentForm.getAgent();
			AgentSvc.getInstance().save(agent);
			return mapping.findForward("safeSuc");
		} else if ("delete".equals(task)) {
			String agentid = request.getParameter("agentid");
			AgentSvc.getInstance().deleteById(new Integer(agentid));
			request.setAttribute("page", "agentMgr.do?task=view&scope=all");
			return mapping.findForward("delSuc");
			// 编辑一个代理商
		} else if ("edit".equals(task)) {
			String agentid = request.getParameter("agentid");
			Agent agent = AgentSvc.getInstance().findById(new Integer(agentid));
			AgentForm agentForm = (AgentForm) form;
			agentForm.setAgent(agent);
			return mapping.findForward("edit");
			// 更新保存一个代理商
		} else if ("update".equals(task)) {
			AgentForm agentForm = (AgentForm) form;
			Agent agent = AgentSvc.getInstance().findById(
					new Integer(agentForm.getAgentid()));
			agentForm.buildAgent(agent);
			AgentSvc.getInstance().update(agent);
			return mapping.findForward("safeSuc");
		} else if ("search".equals(task)) {
			// 未需求
		}
		return null;
	}
}